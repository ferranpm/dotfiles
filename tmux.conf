# Configuration
set -g base-index 1
set -g detach-on-destroy off
set -g escape-time 1
set -g mode-keys vi
set -g mouse on
set -g pane-base-index 1
set -g renumber-windows off
set -g status-keys vi
set -g focus-events on
set -g status-position top

# Key Bindings
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection
bind -T copy-mode-vi enter send -X copy-pipe-and-cancel 'xclip -selection clipboard >/dev/null'
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'xclip -in -selection clipboard >/dev/null'

bind 'c' new-window -c '#{pane_current_path}'
bind '-' split-window -c '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'
bind '|' split-window -h -c '#{pane_current_path}'
bind '%' split-window -h -c '#{pane_current_path}'
bind 'X' kill-session

bind ';' command-prompt
bind ':' last-pane

# Status Bar
set -g status-interval 60
set -g status-left-length 0
set -g status-left ''
set -g status-right-length 100
set -g status-right '#S'
set -g window-status-current-format '[#I:#W]'

# Colors light
set -g status-style bg=color232,fg=color255
set -g pane-border-style fg=color232
set -g pane-active-border-style fg=color232

# # Colors dark
# set -g status-style bg=color255,fg=color0
# set -g pane-border-style fg=color255
# set -g pane-active-border-style fg=color255

# # Colors Dracula
# set -g status-style bg=color0,fg=color255
# set -g pane-border-style fg=color255
# set -g pane-active-border-style fg=color255

# Smart pane switching with awareness of Vim splits.
# See:
#   * https://github.com/christoomey/vim-tmux-navigator
#   * https://github.com/christoomey/vim-tmux-navigator/pull/237
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "if-shell 'expr #{pane_left}' 'select-pane -L'"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "if-shell 'expr #{window_height} - #{pane_bottom} - 1' 'select-pane -D'"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "if-shell 'expr #{pane_top}' 'select-pane -U'"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "if-shell 'expr #{window_width} - #{pane_right} - 1' 'select-pane -R'"
bind-key -T copy-mode-vi C-h if-shell 'expr #{pane_left}' 'select-pane -L'
bind-key -T copy-mode-vi C-j if-shell 'expr #{window_height} - #{pane_bottom} - 1' 'select-pane -D'
bind-key -T copy-mode-vi C-k if-shell 'expr #{pane_top}' 'select-pane -U'
bind-key -T copy-mode-vi C-p send-keys C-c C-p
bind-key -n C-u if-shell "$is_vim" "send-keys C-u" 'copy-mode; send-keys PgUp'
bind-key -n M-t new-window -c '#{pane_current_path}'
bind-key -n M-] next-window
bind-key -n M-[ previous-window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
