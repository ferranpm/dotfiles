#!/usr/bin/env bash

TEST="http://10.35.1.4:6001/v2/things"
PROD="http://api.thethings.io/v2/things"
DEV="http://api-dev.thethings.io/v2/things"
URL=$PROD

GET() {
    curl -N -H "Content-Type: application/json" -X GET $1
}

POST() {
    curl -H "Content-Type: application/json" -X POST "$1" -d "$2"
}

write() {
    if [[ -z $TOKEN || -z $KEY || -z $VALUE ]]
    then
        echo 'Argument missing'
        usage
        exit
    fi
    re='^[+-]?[0-9]+([.][0-9]+)?$'
    if [[ $VALUE =~ $re ]]
    then
        DATA="{\"values\":[{\"key\":\"$KEY\",\"value\":$VALUE}]}"
    else
        DATA="{\"values\":[{\"key\":\"$KEY\",\"value\":\"$VALUE\"}]}"
    fi
    POST "$URL/$TOKEN" "$DATA"
}

get() {
    if [[ -z $TOKEN || -z $KEY ]]
    then
        echo 'Argument missing'
        usage
        exit
    fi
    if [[ -z $LIMIT ]]
    then
        LIMIT=10
    fi
    GET "$URL/$TOKEN/resources/$KEY?limit=$LIMIT"
}

get_all() {
    if [[ -z $TOKEN ]]
    then
        echo 'Argument missing'
        usage
        exit
    fi
    GET "$URL/$TOKEN/all_resources"
}

subscribe() {
    if [[ -z $TOKEN ]]
    then
        echo 'Argument missing'
        usage
        exit
    fi
    GET "$URL/$TOKEN"
}

activate() {
    if [[ -z $TOKEN ]]
    then
        echo 'Argument missing'
        usage
        exit
    fi
    DATA="{\"activationCode\":\"$TOKEN\"}"
    POST "$URL" "$DATA"
}

firmwares() {
    if [[ -z $TOKEN ]]
    then
        echo 'Argument missing'
        usage
        exit
    fi
    if [[ ! -z $KEY ]]
    then
        GET "$URL/$TOKEN/firmwares/download/$KEY"
    else
        GET "$URL/$TOKEN/firmwares/latest"
    fi
}

usage() {
    echo -e "USAGE:"
    echo -e "\t$1 -h"
    echo -e "\t$1 [ -p PLATFORM ] [ -m subscribe ] -t TOKEN"
    echo -e "\t$1 [ -p PLATFORM ] [ -m read_all  ] -t TOKEN"
    echo -e "\t$1 [ -p PLATFORM ] [ -m read      ] -t TOKEN -k KEY"
    echo -e "\t$1 [ -p PLATFORM ] [ -m write     ] -t TOKEN -k KEY -v VALUE"
    echo -e "\t$1 [ -p PLATFORM ] -m firmwares -t TOKEN [-k ID]"
    echo -e "\t$1 [ -p PLATFORM ] -m activate -t ACTIVATION_CODE"
    echo -e "\twhere PLATFORM is one of PROD DEV TEST (defaults to PROD)"
    echo 
}

while getopts "hk:m:p:t:v:" OPTION
do
    case $OPTION in
        h)
            usage $0
            exit 1 ;;
        k) KEY=$OPTARG ;;
        m) METHOD=$OPTARG ;;
        p) URL=${!OPTARG} ;;
        t) TOKEN=$OPTARG ;;
        v) VALUE=$OPTARG ;;
        ?)
            usage $0
            exit 1 ;;
    esac
done

if [[ -n $TOKEN && -z $METHOD ]]
then
    if [[ -n $KEY ]]
    then
        if [[ -n $VALUE ]]
        then
            METHOD="write"
        else
            METHOD="read"
        fi
    else
        if [[ -z $VALUE ]]
        then
            METHOD="subscribe"
        fi
    fi
fi

case $METHOD in
    subscribe) subscribe ;;
    write) write ;;
    read) get ;;
    read_all) get_all ;;
    activate) activate ;;
    firmwares) firmwares ;;
    *) usage $0 ;;
esac
