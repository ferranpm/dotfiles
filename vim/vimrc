call plug#begin('~/.vim/bundle')
Plug 'srstevenson/vim-picker'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
" Languages
Plug 'elixir-editors/vim-elixir'
Plug 'pangloss/vim-javascript'
Plug 'MaxMEllon/vim-jsx-pretty'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-rails'
Plug 'leafgarland/typescript-vim'
call plug#end()

runtime macros/matchit.vim

" important
set synmaxcol=500
set nocompatible

" moving around, searching and patterns
set path=,,
if has('nvim')
  set inccommand=nosplit
endif
set incsearch
set ignorecase
set smartcase

" tags

" displaying text
set scrolloff=4
set nowrap
set showbreak=>
set lazyredraw
set list
set listchars=tab:»\ ,trail:·
set nowrap

" syntax, highlighting and spelling
set nohlsearch
set colorcolumn=128

" multiple windows
set laststatus=2
set statusline=%f%m\ %y%h%r%w%=%c\ %l/%L\ [%{fnamemodify(getcwd(),':t')}]
set noequalalways
set hidden
set switchbuf=useopen
set splitbelow
set splitright

" multiple tab pages
function! TabLine()
  let tabnr = tabpagenr()
  let ColorClass = { nr -> nr == tabnr ? '%#TabLineSel#' : '%#TabLine#' }
  let TabInfo = { _, val ->  ColorClass(val['tabnr']) . ' ' . val['tabnr'] }
  return join(map(gettabinfo(), TabInfo)) . '%#TabLineFill#'
endfunction
set tabline=%!TabLine()

" terminal
set ttyfast
set guicursor=a:block-Cursor-blinkon0,i-c-ci:ver20-Cursor-blinkon0,r-cr:hor20-Cursor-blinkon0
set titlestring=%{fnamemodify(getcwd(),':t')}

" using the mouse
set mouse=a

" printing

" messages and info
set shortmess=cITt
set showcmd
set showmode
set ruler
set confirm

" selecting text

" editing text
set undolevels=5000
set textwidth=128
set backspace=2
set completeopt=menuone

" tabs and indenting
set tabstop=2
set shiftwidth=2
set smarttab
set expandtab
set autoindent
set smartindent

" folding
set foldlevel=99
set foldcolumn=0
set foldopen=hor,mark,percent,quickfix,tag,undo
set foldmethod=indent

" diff mode

" mapping
set timeoutlen=500
set ttimeoutlen=0

" reading and writing files
set modeline
set autoread
set nowritebackup
set nobackup

" the swap file
set noswapfile
set updatetime=300

" command line editing
set wildmode=longest:full,full
set wildignore=**/node_modules/**,*.cache,**/tmp/**,**/coverage/**
set wildignorecase
set wildmenu
set undofile
set undodir=~/.vim/undodir
if !isdirectory(&undodir)
  call system('mkdir '.&undodir)
endif

" executing external commands

" running make and jumping to errors
if executable("ag")
  set grepprg=ag\ --vimgrep\ --nogroup\ --nocolor
  set grepformat=%f:%l:%c:%m
endif

" language specific
set isfname-==

" multi-byte characters

" various
set virtualedit=block
set exrc
set gdefault
set signcolumn=auto

" misc
let mapleader=' '
filetype plugin on
filetype indent on
syntax on

" Autocommands
augroup automaticquickfix
    autocmd!
    autocmd QuickFixCmdPost [^l]* cwindow
    autocmd QuickFixCmdPost    l* lwindow
augroup END

augroup quickfix
    autocmd!
    autocmd FileType qf set nobuflisted
augroup END

command! -nargs=1 -range Align '<,'>call edit#align(<f-args>)

